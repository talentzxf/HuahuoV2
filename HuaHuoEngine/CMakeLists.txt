macro(print_all_variables)
    message(STATUS "print_all_variables------------------------------------------{")
    get_cmake_property(_variableNames VARIABLES)
    foreach (_variableName ${_variableNames})
        message(STATUS "${_variableName}=${${_variableName}}")
    endforeach ()
    message(STATUS "print_all_variables------------------------------------------}")
endmacro()
print_all_variables()

cmake_minimum_required(VERSION 3.21)
project(HuaHuoEngine VERSION 0.01)
configure_file(src/HuaHuoEngineConfig.h.in HuaHuoEngineConfig.h)

option(HuaHuoEditor "Compile HuaHuoEditor" ON)

if(${HuaHuoEditor} MATCHES "ON")
    add_compile_definitions(HUAHUO_EDITOR=1)
endif()

list(APPEND CPPFILES src/HuaHuoEngine.cpp)
list(APPEND CPPFILES src/Components/Transform/Transform.cpp)
list(APPEND CPPFILES src/Components/Transform/TransformHierarchy.cpp)
list(APPEND CPPFILES src/Components/Transform/TransformChangeDispatch.cpp)
list(APPEND CPPFILES src/TypeSystem/Object.cpp)
list(APPEND CPPFILES src/TypeSystem/RTTI.cpp)
list(APPEND CPPFILES src/TypeSystem/TypeManager.cpp)
list(APPEND CPPFILES src/TypeSystem/Type.cpp)
list(APPEND CPPFILES src/Utilities/HashFunctions/xxhash.c)
list(APPEND CPPFILES src/Utilities/RegisterRuntimeInitializeAndCleanup.cpp)
list(APPEND CPPFILES src/Utilities/Word.cpp)
list(APPEND CPPFILES src/Utilities/Hash128.cpp)
list(APPEND CPPFILES src/BaseClasses/GameObject.cpp)
list(APPEND CPPFILES src/BaseClasses/ClassRegistration.cpp)
list(APPEND CPPFILES src/BaseClasses/MessageIdentifier.cpp)
list(APPEND CPPFILES src/BaseClasses/MessageHandler.cpp)
list(APPEND CPPFILES src/BaseClasses/NamedObject.cpp)
list(APPEND CPPFILES src/Components/BaseComponent.cpp)
list(APPEND CPPFILES src/Serialize/PersistentManager.cpp)
list(APPEND CPPFILES src/Serialize/PathNamePersistentManager.cpp)
list(APPEND CPPFILES src/Serialize/Remapper.cpp)
list(APPEND CPPFILES src/Serialize/SerializedFile.cpp)
list(APPEND CPPFILES src/Serialize/TransferFunctions/StreamedBinaryRead.cpp)
list(APPEND CPPFILES src/Serialize/TransferFunctions/StreamedBinaryWrite.cpp)
list(APPEND CPPFILES src/Serialize/TransferFunctions/TransferBase.cpp)
list(APPEND CPPFILES src/Serialize/SerializationCaching/CacheWriterBase.cpp)
list(APPEND CPPFILES src/Serialize/SerializationCaching/CacheReaderBase.cpp)
list(APPEND CPPFILES src/Serialize/SerializationCaching/CachedReader.cpp)
list(APPEND CPPFILES src/Serialize/SerializationCaching/CachedWriter.cpp)
list(APPEND CPPFILES src/Serialize/SerializationCaching/MemoryCacherReadBlocks.cpp)
list(APPEND CPPFILES src/Export/Scripting/GameObjectExport.cpp)
list(APPEND CPPFILES src/Containers/CommonString.cpp)
list(APPEND CPPFILES src/Math/Quaternionf.cpp)
list(APPEND CPPFILES src/Math/Vector3f.cpp)
list(APPEND CPPFILES src/Math/Vector2.cpp)
list(APPEND CPPFILES src/Misc/GameObjectUtility.cpp)
list(APPEND CPPFILES src/Logging/LogAssert.cpp)
list(APPEND CPPFILES src/Memory/MemoryMacros.cpp)
list(APPEND CPPFILES src/SceneManager/HuaHuoScene.cpp)
list(APPEND CPPFILES src/SceneManager/SceneManager.cpp)
list(APPEND CPPFILES src/Export/Events/ScriptEventManager.cpp)
list(APPEND CPPFILES src/Graphics/Mesh/Mesh.cpp)
list(APPEND CPPFILES src/Graphics/Mesh/VertexData.cpp)
list(APPEND CPPFILES src/Graphics/Mesh/SharedMeshData.cpp)
list(APPEND CPPFILES src/Graphics/MeshRenderer.cpp)
list(APPEND CPPFILES src/Camera/BaseRenderer.cpp)
list(APPEND CPPFILES src/Camera/RenderScene.cpp)
list(APPEND CPPFILES src/Camera/Camera.cpp)

if(${HuaHuoEditor} MATCHES "ON")
    list(APPEND CPPFILES src/Editor/SceneInspector.cpp)
    list(APPEND CPPFILES src/Editor/Utility/SceneRootTransformArray.cpp)
    list(APPEND CPPFILES src/Editor/SceneView.cpp)
endif()

set(CMAKE_CXX_STANDARD 23)
set(EXTRA_INCLUDE_DIR src)

set(TARGETNAME HuaHuoEngine)


if (CMAKE_CXX_PLATFORM_ID STREQUAL "emscripten")
    add_compile_definitions(WEB_ENV=1)
    list(APPEND CPPFILES src/HuaHuoEngineWrapper.cpp)
    add_executable(${TARGETNAME} ${CPPFILES})
else ()
    include_directories("C:\\Users\\vincentzhang\\OpenSource\\emsdk\\upstream\\emscripten\\system\\include\\")
    set(TARGETNAME TestHuaHuoEngine)
    add_executable(TestHuaHuoEngine test/main.cpp)
endif ()

target_include_directories(${TARGETNAME} PUBLIC "${PROJECT_BINARY_DIR}" ${EXTRA_INCLUDE_DIR})